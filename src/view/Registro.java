/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.List;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import static java.nio.file.Files.delete;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Observable;
import java.util.Observer;
import java.util.Optional;
import java.util.Set;
import java.util.function.Predicate;
import java.util.stream.Collectors;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import logica.Conexion;
import logica.Servicio;
import model.Multa;
import model.Respuesta;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author diego
 */
public class Registro extends javax.swing.JFrame implements Observer {

    ArrayList<Multa> lstMultas = new ArrayList<>();
    ArrayList<Multa> lstMultasBorradas = new ArrayList<>();
    ArrayList<String> lstTipoMultas = new ArrayList<>();
    /**
     * Creates new form Registro
     */
    public Registro() {
        initComponents();
        initComponents2();
        Servicio servicio = new Servicio();
        lstMultas = servicio.getMultas();
        lstTipoMultas = servicio.getTiposMulta();
        if(lstMultas == null) {
            System.err.println("La lista es null");
        } else {
            System.err.println("LISTA: "+lstMultas.size());
        }
        llenarTabla(lstMultas);
        llenarComboTipoMulta(lstTipoMultas);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtDNI = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmbTipos = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtMonto = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbMultas = new javax.swing.JTable();
        btnBorrar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtPunto = new javax.swing.JTextField();
        btnRefresh = new javax.swing.JButton();
        btnRegistrar = new javax.swing.JButton();
        lbDniError = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cmbReporte = new javax.swing.JComboBox<>();
        txtBuscar = new javax.swing.JTextField();
        btnBorrados = new javax.swing.JButton();
        txtFecha = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("DNI");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 26, -1, -1));
        getContentPane().add(txtDNI, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 23, 80, -1));

        jLabel2.setText("Tipo");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(266, 26, -1, -1));

        getContentPane().add(cmbTipos, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 23, 140, -1));

        jLabel3.setText("Monto");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));
        getContentPane().add(txtMonto, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 80, -1));

        jLabel4.setText("Correo");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(266, 71, -1, -1));
        getContentPane().add(txtCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 70, 135, -1));

        tbMultas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "DNI", "Multa", "Monto", "Correo", "Puntos", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbMultas.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tbMultas);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 206, 560, 275));

        btnBorrar.setText("Borrar");
        btnBorrar.setEnabled(false);
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBorrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(338, 177, -1, -1));

        jLabel5.setText("Punto");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));
        getContentPane().add(txtPunto, new org.netbeans.lib.awtextra.AbsoluteConstraints(67, 100, 80, -1));

        btnRefresh.setText("Refrescar");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        getContentPane().add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(407, 177, -1, -1));

        btnRegistrar.setText("Registrar");
        btnRegistrar.setEnabled(false);
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 177, -1, -1));

        lbDniError.setForeground(new java.awt.Color(255, 51, 51));
        getContentPane().add(lbDniError, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 50, 80, -1));

        jLabel6.setText("Fecha");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(266, 109, -1, -1));

        cmbReporte.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "::: Selec. Reporte :::", "Pie", "Barras", "Lineas" }));
        getContentPane().add(cmbReporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));
        getContentPane().add(txtBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 165, -1));

        btnBorrados.setText("Borrados");
        btnBorrados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorradosActionPerformed(evt);
            }
        });
        getContentPane().add(btnBorrados, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 148, 138, -1));
        getContentPane().add(txtFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(305, 106, 140, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void llenarComboTipoMulta(ArrayList<String> lstTipoMultas) {
        DefaultComboBoxModel dml = new DefaultComboBoxModel();
        dml.addElement("::: Selec. Multa :::");
        for (String descTipMulta : lstTipoMultas) {
            dml.addElement(descTipMulta);
        }
        cmbTipos.setModel(dml);
    }
    
    private void initComponents2() {
        txtDNI.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
              warn();
            }
            public void removeUpdate(DocumentEvent e) {
              warn();
            }
            public void insertUpdate(DocumentEvent e) {
              warn();
            }

            public void warn() {
                String dni = txtDNI.getText();
                validarDNI(dni);
            }
        });
        txtBuscar.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
              warn();
            }
            public void removeUpdate(DocumentEvent e) {
              warn();
            }
            public void insertUpdate(DocumentEvent e) {
              warn();
            }

            public void warn() {
                String busqueda = txtBuscar.getText();
                if(busqueda.length() == 0) {
                    llenarTabla(lstMultas);
                    return;
                }
                buscador(busqueda);
            }
        });
        cmbReporte.addActionListener (new ActionListener () {
        public void actionPerformed(ActionEvent e) {
            abrirReporte(cmbReporte.getSelectedItem()+"");
        }
    });
    }

    private void abrirReporte(String tipoReporte) {
        if(tipoReporte.equals("::: Selec. Reporte :::")) {
            return;
        }
        if(tipoReporte.equals("Pie")) {
            crearReporte("PieChart");return;
        }
        if(tipoReporte.equals("Barras")) {
            crearReporte("barras");return;
        }
        if(tipoReporte.equals("Lineas")) {
            crearReporte("lineas");return;
        }
    }
    
    private void crearReporte(String nombreReporte) {
        try {
            JasperReport jr = (JasperReport) JRLoader.loadObject(Registro.class.getResource("../reportes/"+nombreReporte+".jasper"));
            JasperPrint jp = JasperFillManager.fillReport(jr, null, Conexion.startConeccion());
            JasperViewer jv = new JasperViewer(jp, false);
            jv.show();
        } catch (Exception e) {
        }
    }
    
    private void buscador(String busqueda) {
        Predicate<Multa> byDni = multa -> multa.getDni().contains(busqueda);
        Predicate<Multa> byMulta = multa -> multa.getMulta().toLowerCase().contains(busqueda.toLowerCase());
        ArrayList<Multa> listaFiltradaDNI   = (ArrayList) lstMultas.stream().filter(byDni).collect(Collectors.toList());
        ArrayList<Multa> listaFiltradaMulta = (ArrayList) lstMultas.stream().filter(byMulta).collect(Collectors.toList());
        listaFiltradaDNI.addAll(listaFiltradaMulta);
        llenarTabla(listaFiltradaDNI);
    }
    
    private void validarDNI(String dni) {
        btnRegistrar.setEnabled(false);
        if(dni.length() == 0) {
            lbDniError.setText(null);
            return;
        }
        if(!dni.matches("[0-9]+")) {
            lbDniError.setText("El número de DNI es incorrecto.");
            return;
        } else {
            lbDniError.setText(null);
        }
        if(dni.length() != 8) {
            lbDniError.setText("El número de DNI tiene que ser 8 caracteres.");
            return;
        } else {
            lbDniError.setText(null);
        }
        btnRegistrar.setEnabled(true);
    }
    
    int idMultaModif = 0;
    
    private void setearDatos() {
        String dni    = tbMultas.getModel().getValueAt(tbMultas.getSelectedRow(), 1  )+"";
        String multa  = tbMultas.getModel().getValueAt(tbMultas.getSelectedRow(), 2  )+"";
        String monto  = tbMultas.getModel().getValueAt(tbMultas.getSelectedRow(), 3 )+"";
        String correo = tbMultas.getModel().getValueAt(tbMultas.getSelectedRow(), 4  )+"";
        String punto  = tbMultas.getModel().getValueAt(tbMultas.getSelectedRow(), 5  )+"";
        String idMulta = tbMultas.getModel().getValueAt(tbMultas.getSelectedRow(), 6  )+"";
        System.err.println(dni+" - "+multa+" - "+monto+" - "+correo+" - "+punto+" - "+idMulta);
        idMultaModif = Integer.parseInt(idMulta);
        txtDNI.setText(dni);
        txtDNI.setEnabled(false);
        cmbTipos.setSelectedItem(multa);
        txtMonto.setText(monto);
        txtCorreo.setText(correo);
        txtPunto.setText(punto);
        btnRegistrar.setText("Actualizar");
        btnBorrar.setEnabled(true);
    }
    
    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        // TODO add your handling code here:
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog (null, "¿Estas seguro de borrar la muta?", "Warning", dialogButton);
        if(dialogResult == JOptionPane.YES_OPTION){
            Servicio servicio = new Servicio();
            Respuesta rpta = new Respuesta();
            rpta = servicio.borrarMulta(idMultaModif);
            System.err.println(rpta.toString());
            if(rpta.getCodigo() == 0) {
                for(Multa m : lstMultas) {
                    if(m.getIdMulta() == idMultaModif) {
                        lstMultas.remove(m);
                        lstMultasBorradas.add(m);
                        break;
                    }
                }
                idMultaModif = 0;
                limpiarForm();
                llenarTabla(lstMultas);
            }
            JOptionPane.showMessageDialog(this, rpta.getMsj());
        }
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        Servicio servicio = new Servicio();
        lstMultas = servicio.getMultas();
        llenarTabla(lstMultas);
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        // TODO add your handling code here:
        try {
            String dni = txtDNI.getText();
            if(!dni.matches("[0-9]+")) {
                lbDniError.setText("El número de DNI es incorrecto.");
                return;
            }
            if(dni.length() != 8) {
                lbDniError.setText("El número de DNI tiene que ser 8 caracteres.");
                return;
            }
            String multa  = cmbTipos.getSelectedItem().toString();
            String montoTexto = txtMonto.getText();
            // validar
            
            String correo = txtCorreo.getText();
            int punto     = Integer.parseInt(txtPunto.getText());
            String fecha  = txtFecha.getText();
            // 23/04/2020
//            String year = fecha.substring(6, 10);
//            String mes = fecha.substring(3, 5);
//            String dia = fecha.substring(0, 2);
//            //validarCampos(); int year, int month, int date
//            fecha = year+"-"+mes+"-"+dia;
            
            Date fechaMulta = new SimpleDateFormat("dd/MM/yyyy").parse(fecha);  
            
            Double monto  = Double.parseDouble(montoTexto);
            
            Multa objMulta = new Multa();
            objMulta.setDni(dni);
            objMulta.setMulta(multa);
            objMulta.setMonto(monto);
            objMulta.setCorreo(correo);
            objMulta.setPunto(punto);
            objMulta.setFecha(fechaMulta);

            Servicio servicio = new Servicio();
            Respuesta rpta = new Respuesta();
            if(idMultaModif == 0) {
                rpta = servicio.insertarMultaProcedure(objMulta);
                objMulta.setIdMulta(rpta.getIdGenerado());
            } else {
                objMulta.setIdMulta(idMultaModif);
                rpta = servicio.actualizarMulta(objMulta);
            }
            System.err.println(rpta.toString());
            if(rpta.getCodigo() == 0) {
                if(idMultaModif == 0) {
                    lstMultas.add(objMulta);
                } else {
                    for(Multa m : lstMultas) {
                        if(m.getIdMulta() == objMulta.getIdMulta()) {
                            m.setCorreo(correo);
                            m.setMonto(monto);
                            m.setMulta(multa);
                            m.setPunto(punto);
                            break;
                        }
                    }
                }
                limpiarForm();
                llenarTabla(lstMultas);
            }
            JOptionPane.showMessageDialog(this, rpta.getMsj());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnBorradosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorradosActionPerformed
        // TODO add your handling code here:
        Borrados frame = new Borrados(lstMultasBorradas, regiInstance);
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.setVisible(true);
    }//GEN-LAST:event_btnBorradosActionPerformed

    private void limpiarForm() {
        txtDNI.setText(null);
        cmbTipos.setSelectedIndex(0);
        txtMonto.setText(null);
        txtCorreo.setText(null);
        txtPunto.setText(null);
        txtFecha.setText(null);
        btnRegistrar.setText("Registrar");
        btnBorrar.setEnabled(false);
        txtDNI.setEnabled(true);
    }
    
    private void llenarTabla(ArrayList<Multa> lista) {
        DefaultTableModel model = new DefaultTableModel(new String[]{"#", "DNI", "Multa", "Monto", "Correo", "Punto", "Id"}, 0);
        
//        DefaultTableModel model = (DefaultTableModel) tbMultas.getModel();
//        model.setNumRows(0);
        int i = 1;
        for(Multa m : lista) {
            model.addRow(new Object[]{i, m.getDni(), m.getMulta(), m.getMonto(), m.getCorreo(), m.getPunto(), m.getIdMulta()});
            i++;
        }
        tbMultas = new JTable(model);
        tbMultas.removeColumn(tbMultas.getColumnModel().getColumn(6));
        ListSelectionListener lel = new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent event) {
                if(!event.getValueIsAdjusting()) {
                    setearDatos();
                }
            }
        };
        tbMultas.getSelectionModel().addListSelectionListener(lel);
        jScrollPane1.setViewportView(tbMultas);
    }
    
    @Override
    public void update(Observable o, Object arg) { // RECIBO LO ENVIADO POR EL changeData()
        Multa multRest = (Multa) arg;
        System.err.println(multRest.getCorreo());
        /////
        Servicio servicio = new Servicio();
        Respuesta rpta = new Respuesta();
        rpta = servicio.insertarMulta(multRest);
        multRest.setIdMulta(rpta.getIdGenerado());
        if(rpta.getCodigo() == 0) {
            lstMultas.add(multRest);
            limpiarForm();
            llenarTabla(lstMultas);
        }
        JOptionPane.showMessageDialog(this, rpta.getMsj());
    }
    /**
     * @param args the command line arguments
     */
    
    static Registro regiInstance = new Registro();
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                regiInstance.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrados;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JComboBox<String> cmbReporte;
    private javax.swing.JComboBox<String> cmbTipos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbDniError;
    private javax.swing.JTable tbMultas;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtDNI;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtMonto;
    private javax.swing.JTextField txtPunto;
    // End of variables declaration//GEN-END:variables

}
